// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`exportData should export data from workspace with system tables 1`] = `
Array [
  Object {
    "body": Object {
      "query": "
      query UsersList {
        usersList {
          items {
            
            client {
              items {
                id
              }
            }

          }
        }
      }
    ",
      "variables": Object {},
    },
    "headers": Object {
      "accept": Array [
        "*/*",
      ],
      "accept-encoding": Array [
        "gzip,deflate",
      ],
      "authorization": Array [
        "Bearer idToken",
      ],
      "connection": Array [
        "close",
      ],
      "content-length": Array [
        "244",
      ],
      "content-type": Array [
        "application/json",
      ],
      "host": "api.test.8base.com",
      "user-agent": Array [
        "node-fetch/1.0 (+https://github.com/bitinn/node-fetch)",
      ],
      "workspace": Array [
        "workspaceId",
      ],
    },
  },
  Object {
    "body": Object {
      "query": "
      query FilesList {
        filesList {
          items {
            id
downloadUrl
public
filename
meta
mods

          }
        }
      }
    ",
      "variables": Object {},
    },
    "headers": Object {
      "accept": Array [
        "*/*",
      ],
      "accept-encoding": Array [
        "gzip,deflate",
      ],
      "authorization": Array [
        "Bearer idToken",
      ],
      "connection": Array [
        "close",
      ],
      "content-length": Array [
        "192",
      ],
      "content-type": Array [
        "application/json",
      ],
      "host": "api.test.8base.com",
      "user-agent": Array [
        "node-fetch/1.0 (+https://github.com/bitinn/node-fetch)",
      ],
      "workspace": Array [
        "workspaceId",
      ],
    },
  },
  Object {
    "body": Object {
      "query": "
      query clientsList {
        clientsList {
          items {
            
            
            id
user {
              id
            }
fullName
orders {
              items {
                id
              }
            }

          }
        }
      }
    ",
      "variables": Object {},
    },
    "headers": Object {
      "accept": Array [
        "*/*",
      ],
      "accept-encoding": Array [
        "gzip,deflate",
      ],
      "authorization": Array [
        "Bearer idToken",
      ],
      "connection": Array [
        "close",
      ],
      "content-length": Array [
        "317",
      ],
      "content-type": Array [
        "application/json",
      ],
      "host": "api.test.8base.com",
      "user-agent": Array [
        "node-fetch/1.0 (+https://github.com/bitinn/node-fetch)",
      ],
      "workspace": Array [
        "workspaceId",
      ],
    },
  },
  Object {
    "body": Object {
      "query": "
      query ordersList {
        ordersList {
          items {
            
            id
client {
              id
            }

          }
        }
      }
    ",
      "variables": Object {},
    },
    "headers": Object {
      "accept": Array [
        "*/*",
      ],
      "accept-encoding": Array [
        "gzip,deflate",
      ],
      "authorization": Array [
        "Bearer idToken",
      ],
      "connection": Array [
        "close",
      ],
      "content-length": Array [
        "208",
      ],
      "content-type": Array [
        "application/json",
      ],
      "host": "api.test.8base.com",
      "user-agent": Array [
        "node-fetch/1.0 (+https://github.com/bitinn/node-fetch)",
      ],
      "workspace": Array [
        "workspaceId",
      ],
    },
  },
]
`;

exports[`exportData should export data from workspace with system tables 2`] = `
Object {
  "Users": Array [
    Object {
      "$id": "user-1",
      "client": Object {
        "$id": "client-1",
      },
    },
  ],
  "clients": Array [
    Object {
      "$id": "client-1",
      "fullName": "Jacalyn Mccarrel",
      "orders": Array [
        Object {
          "$id": "order-1",
        },
        Object {
          "$id": "order-2",
        },
      ],
      "user": Object {
        "$id": "$currentUserId",
      },
    },
  ],
  "orders": Array [
    Object {
      "$id": "order-1",
      "client": Object {
        "$id": "client-1",
      },
    },
    Object {
      "$id": "order-2",
      "client": Object {
        "$id": "client-1",
      },
    },
  ],
}
`;

exports[`exportData should export data from workspace without system tables 1`] = `
Array [
  Object {
    "body": Object {
      "query": "
  query TableList($filter: TableListFilter) {
    tablesList(filter: $filter) {
      items {
        ...TableFragment
      }
    }
  }

  fragment TableFragment on Table {
    id
    name
    displayName
    isSystem
    fields {
      ...TableFieldFragment
    }
  }

  fragment TableFieldFragment on TableField {
    ...CommonTableFieldFragment
    fieldTypeAttributes {
      ...TextFieldTypeAttributes
      ...NumberFieldTypeAttributes
      ...FileFieldTypeAttributes
      ...DateFieldTypeAttributes
      ...SwitchFieldTypeAttributes
      ...SmartFieldTypesAttributes
    }
  }

  fragment CommonTableFieldFragment on TableField {
    id
    name
    displayName
    description
    fieldType
    fieldTypeAttributes {
      ...TextFieldTypeAttributes
      ...NumberFieldTypeAttributes
      ...FileFieldTypeAttributes
      ...DateFieldTypeAttributes
      ...SwitchFieldTypeAttributes
    }
    isList
    isRequired
    isUnique
    defaultValue
    isSystem
    isMeta
    relation {
      refFieldName
      refFieldDisplayName
      relationTableName
      relationFieldName
      refTable {
        id
        name
      }
      refFieldIsList
      refFieldIsRequired
    }
  }

  fragment DateFieldTypeAttributes on DateFieldTypeAttributes {
    format
  }

  fragment TextFieldTypeAttributes on TextFieldTypeAttributes {
    format
    fieldSize
  }

  fragment NumberFieldTypeAttributes on NumberFieldTypeAttributes {
    format
    precision
    currency
    minValue
    maxValue
    isBigInt
  }

  fragment FileFieldTypeAttributes on FileFieldTypeAttributes {
    format
    maxSize
    typeRestrictions
  }

  fragment SmartFieldTypesAttributes on SmartFieldTypeAttributes {
    format
    innerFields {
      name
      displayName
      description
      fieldType
      isList
      isRequired
      isUnique
      fieldTypeAttributes {
        ...TextFieldTypeAttributes
        ...NumberFieldTypeAttributes
        ...FileFieldTypeAttributes
        ...DateFieldTypeAttributes
        ...SwitchFieldTypeAttributes
      }
    }
  }

  fragment SwitchFieldTypeAttributes on SwitchFieldTypeAttributes {
    format
    listOptions
  }
",
      "variables": Object {
        "filter": Object {
          "tableNames": Array [
            "Files",
          ],
        },
      },
    },
    "headers": Object {
      "accept": Array [
        "*/*",
      ],
      "accept-encoding": Array [
        "gzip,deflate",
      ],
      "authorization": Array [
        "Bearer idToken",
      ],
      "connection": Array [
        "close",
      ],
      "content-length": Array [
        "2338",
      ],
      "content-type": Array [
        "application/json",
      ],
      "host": "api.test.8base.com",
      "user-agent": Array [
        "node-fetch/1.0 (+https://github.com/bitinn/node-fetch)",
      ],
      "workspace": Array [
        "workspaceId",
      ],
    },
  },
  Object {
    "body": Object {
      "query": "
      query clientsList {
        clientsList {
          items {
            
            
            id
user {
              id
            }
fullName
orders {
              items {
                id
              }
            }

          }
        }
      }
    ",
      "variables": Object {},
    },
    "headers": Object {
      "accept": Array [
        "*/*",
      ],
      "accept-encoding": Array [
        "gzip,deflate",
      ],
      "authorization": Array [
        "Bearer idToken",
      ],
      "connection": Array [
        "close",
      ],
      "content-length": Array [
        "317",
      ],
      "content-type": Array [
        "application/json",
      ],
      "host": "api.test.8base.com",
      "user-agent": Array [
        "node-fetch/1.0 (+https://github.com/bitinn/node-fetch)",
      ],
      "workspace": Array [
        "workspaceId",
      ],
    },
  },
  Object {
    "body": Object {
      "query": "
      query ordersList {
        ordersList {
          items {
            
            id
client {
              id
            }

          }
        }
      }
    ",
      "variables": Object {},
    },
    "headers": Object {
      "accept": Array [
        "*/*",
      ],
      "accept-encoding": Array [
        "gzip,deflate",
      ],
      "authorization": Array [
        "Bearer idToken",
      ],
      "connection": Array [
        "close",
      ],
      "content-length": Array [
        "208",
      ],
      "content-type": Array [
        "application/json",
      ],
      "host": "api.test.8base.com",
      "user-agent": Array [
        "node-fetch/1.0 (+https://github.com/bitinn/node-fetch)",
      ],
      "workspace": Array [
        "workspaceId",
      ],
    },
  },
  Object {
    "body": Object {
      "query": "
      query FilesList {
        filesList {
          items {
            id
downloadUrl
public
filename
meta
mods

          }
        }
      }
    ",
      "variables": Object {},
    },
    "headers": Object {
      "accept": Array [
        "*/*",
      ],
      "accept-encoding": Array [
        "gzip,deflate",
      ],
      "authorization": Array [
        "Bearer idToken",
      ],
      "connection": Array [
        "close",
      ],
      "content-length": Array [
        "192",
      ],
      "content-type": Array [
        "application/json",
      ],
      "host": "api.test.8base.com",
      "user-agent": Array [
        "node-fetch/1.0 (+https://github.com/bitinn/node-fetch)",
      ],
      "workspace": Array [
        "workspaceId",
      ],
    },
  },
]
`;

exports[`exportData should export data from workspace without system tables 2`] = `
Object {
  "Files": Array [],
  "clients": Array [
    Object {
      "$id": "client-1",
      "fullName": "Jacalyn Mccarrel",
      "orders": Array [
        Object {
          "$id": "order-1",
        },
        Object {
          "$id": "order-2",
        },
      ],
      "user": Object {
        "$id": "$currentUserId",
      },
    },
  ],
  "orders": Array [
    Object {
      "$id": "order-1",
      "client": Object {
        "$id": "client-1",
      },
    },
    Object {
      "$id": "order-2",
      "client": Object {
        "$id": "client-1",
      },
    },
  ],
}
`;

exports[`exportData should have ability to choose which tables to export exclude 1`] = `
Array [
  Object {
    "body": Object {
      "query": "
  query TableList($filter: TableListFilter) {
    tablesList(filter: $filter) {
      items {
        ...TableFragment
      }
    }
  }

  fragment TableFragment on Table {
    id
    name
    displayName
    isSystem
    fields {
      ...TableFieldFragment
    }
  }

  fragment TableFieldFragment on TableField {
    ...CommonTableFieldFragment
    fieldTypeAttributes {
      ...TextFieldTypeAttributes
      ...NumberFieldTypeAttributes
      ...FileFieldTypeAttributes
      ...DateFieldTypeAttributes
      ...SwitchFieldTypeAttributes
      ...SmartFieldTypesAttributes
    }
  }

  fragment CommonTableFieldFragment on TableField {
    id
    name
    displayName
    description
    fieldType
    fieldTypeAttributes {
      ...TextFieldTypeAttributes
      ...NumberFieldTypeAttributes
      ...FileFieldTypeAttributes
      ...DateFieldTypeAttributes
      ...SwitchFieldTypeAttributes
    }
    isList
    isRequired
    isUnique
    defaultValue
    isSystem
    isMeta
    relation {
      refFieldName
      refFieldDisplayName
      relationTableName
      relationFieldName
      refTable {
        id
        name
      }
      refFieldIsList
      refFieldIsRequired
    }
  }

  fragment DateFieldTypeAttributes on DateFieldTypeAttributes {
    format
  }

  fragment TextFieldTypeAttributes on TextFieldTypeAttributes {
    format
    fieldSize
  }

  fragment NumberFieldTypeAttributes on NumberFieldTypeAttributes {
    format
    precision
    currency
    minValue
    maxValue
    isBigInt
  }

  fragment FileFieldTypeAttributes on FileFieldTypeAttributes {
    format
    maxSize
    typeRestrictions
  }

  fragment SmartFieldTypesAttributes on SmartFieldTypeAttributes {
    format
    innerFields {
      name
      displayName
      description
      fieldType
      isList
      isRequired
      isUnique
      fieldTypeAttributes {
        ...TextFieldTypeAttributes
        ...NumberFieldTypeAttributes
        ...FileFieldTypeAttributes
        ...DateFieldTypeAttributes
        ...SwitchFieldTypeAttributes
      }
    }
  }

  fragment SwitchFieldTypeAttributes on SwitchFieldTypeAttributes {
    format
    listOptions
  }
",
      "variables": Object {
        "filter": Object {
          "tableNames": Array [
            "Files",
          ],
        },
      },
    },
    "headers": Object {
      "accept": Array [
        "*/*",
      ],
      "accept-encoding": Array [
        "gzip,deflate",
      ],
      "authorization": Array [
        "Bearer idToken",
      ],
      "connection": Array [
        "close",
      ],
      "content-length": Array [
        "2338",
      ],
      "content-type": Array [
        "application/json",
      ],
      "host": "api.test.8base.com",
      "user-agent": Array [
        "node-fetch/1.0 (+https://github.com/bitinn/node-fetch)",
      ],
      "workspace": Array [
        "workspaceId",
      ],
    },
  },
  Object {
    "body": Object {
      "query": "
      query ordersList {
        ordersList {
          items {
            
            id
client {
              id
            }

          }
        }
      }
    ",
      "variables": Object {},
    },
    "headers": Object {
      "accept": Array [
        "*/*",
      ],
      "accept-encoding": Array [
        "gzip,deflate",
      ],
      "authorization": Array [
        "Bearer idToken",
      ],
      "connection": Array [
        "close",
      ],
      "content-length": Array [
        "208",
      ],
      "content-type": Array [
        "application/json",
      ],
      "host": "api.test.8base.com",
      "user-agent": Array [
        "node-fetch/1.0 (+https://github.com/bitinn/node-fetch)",
      ],
      "workspace": Array [
        "workspaceId",
      ],
    },
  },
  Object {
    "body": Object {
      "query": "
      query FilesList {
        filesList {
          items {
            id
downloadUrl
public
filename
meta
mods

          }
        }
      }
    ",
      "variables": Object {},
    },
    "headers": Object {
      "accept": Array [
        "*/*",
      ],
      "accept-encoding": Array [
        "gzip,deflate",
      ],
      "authorization": Array [
        "Bearer idToken",
      ],
      "connection": Array [
        "close",
      ],
      "content-length": Array [
        "192",
      ],
      "content-type": Array [
        "application/json",
      ],
      "host": "api.test.8base.com",
      "user-agent": Array [
        "node-fetch/1.0 (+https://github.com/bitinn/node-fetch)",
      ],
      "workspace": Array [
        "workspaceId",
      ],
    },
  },
]
`;

exports[`exportData should have ability to choose which tables to export exclude 2`] = `
Object {
  "Files": Array [],
  "orders": Array [
    Object {
      "$id": "order-1",
      "client": Object {
        "$id": "client-1",
      },
    },
    Object {
      "$id": "order-2",
      "client": Object {
        "$id": "client-1",
      },
    },
  ],
}
`;

exports[`exportData should have ability to choose which tables to export include 1`] = `
Array [
  Object {
    "body": Object {
      "query": "
  query TableList($filter: TableListFilter) {
    tablesList(filter: $filter) {
      items {
        ...TableFragment
      }
    }
  }

  fragment TableFragment on Table {
    id
    name
    displayName
    isSystem
    fields {
      ...TableFieldFragment
    }
  }

  fragment TableFieldFragment on TableField {
    ...CommonTableFieldFragment
    fieldTypeAttributes {
      ...TextFieldTypeAttributes
      ...NumberFieldTypeAttributes
      ...FileFieldTypeAttributes
      ...DateFieldTypeAttributes
      ...SwitchFieldTypeAttributes
      ...SmartFieldTypesAttributes
    }
  }

  fragment CommonTableFieldFragment on TableField {
    id
    name
    displayName
    description
    fieldType
    fieldTypeAttributes {
      ...TextFieldTypeAttributes
      ...NumberFieldTypeAttributes
      ...FileFieldTypeAttributes
      ...DateFieldTypeAttributes
      ...SwitchFieldTypeAttributes
    }
    isList
    isRequired
    isUnique
    defaultValue
    isSystem
    isMeta
    relation {
      refFieldName
      refFieldDisplayName
      relationTableName
      relationFieldName
      refTable {
        id
        name
      }
      refFieldIsList
      refFieldIsRequired
    }
  }

  fragment DateFieldTypeAttributes on DateFieldTypeAttributes {
    format
  }

  fragment TextFieldTypeAttributes on TextFieldTypeAttributes {
    format
    fieldSize
  }

  fragment NumberFieldTypeAttributes on NumberFieldTypeAttributes {
    format
    precision
    currency
    minValue
    maxValue
    isBigInt
  }

  fragment FileFieldTypeAttributes on FileFieldTypeAttributes {
    format
    maxSize
    typeRestrictions
  }

  fragment SmartFieldTypesAttributes on SmartFieldTypeAttributes {
    format
    innerFields {
      name
      displayName
      description
      fieldType
      isList
      isRequired
      isUnique
      fieldTypeAttributes {
        ...TextFieldTypeAttributes
        ...NumberFieldTypeAttributes
        ...FileFieldTypeAttributes
        ...DateFieldTypeAttributes
        ...SwitchFieldTypeAttributes
      }
    }
  }

  fragment SwitchFieldTypeAttributes on SwitchFieldTypeAttributes {
    format
    listOptions
  }
",
      "variables": Object {
        "filter": Object {
          "tableNames": Array [
            "Files",
          ],
        },
      },
    },
    "headers": Object {
      "accept": Array [
        "*/*",
      ],
      "accept-encoding": Array [
        "gzip,deflate",
      ],
      "authorization": Array [
        "Bearer idToken",
      ],
      "connection": Array [
        "close",
      ],
      "content-length": Array [
        "2338",
      ],
      "content-type": Array [
        "application/json",
      ],
      "host": "api.test.8base.com",
      "user-agent": Array [
        "node-fetch/1.0 (+https://github.com/bitinn/node-fetch)",
      ],
      "workspace": Array [
        "workspaceId",
      ],
    },
  },
  Object {
    "body": Object {
      "query": "
      query clientsList {
        clientsList {
          items {
            
            
            id
user {
              id
            }
fullName
orders {
              items {
                id
              }
            }

          }
        }
      }
    ",
      "variables": Object {},
    },
    "headers": Object {
      "accept": Array [
        "*/*",
      ],
      "accept-encoding": Array [
        "gzip,deflate",
      ],
      "authorization": Array [
        "Bearer idToken",
      ],
      "connection": Array [
        "close",
      ],
      "content-length": Array [
        "317",
      ],
      "content-type": Array [
        "application/json",
      ],
      "host": "api.test.8base.com",
      "user-agent": Array [
        "node-fetch/1.0 (+https://github.com/bitinn/node-fetch)",
      ],
      "workspace": Array [
        "workspaceId",
      ],
    },
  },
]
`;

exports[`exportData should have ability to choose which tables to export include 2`] = `
Object {
  "clients": Array [
    Object {
      "$id": "client-1",
      "fullName": "Jacalyn Mccarrel",
      "orders": Array [
        Object {
          "$id": "order-1",
        },
        Object {
          "$id": "order-2",
        },
      ],
      "user": Object {
        "$id": "$currentUserId",
      },
    },
  ],
}
`;
